/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iuGrafica;

import controlador.ControladorAdministrarMesas;
import controlador.ControladorIngresoAMesa;
import controlador.VistaAdministrarMesas;
import controlador.VistaIngresoAMesa;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import logica.Administrador;
import logica.Jugador;
import logica.Mano;
import logica.Mesa;
import panelCartasPoker.PanelCartasPokerException;

/**
 *
 * @author PC
 */
public class AdministrarMesas extends javax.swing.JFrame implements VistaAdministrarMesas {

    /**
     * Creates new form Menu
     */
    private ControladorAdministrarMesas controladorAdministrarMesas;
    private ArrayList<Mesa> mesas = null;
    private Mesa mesaSeleccionada = null;
    private ArrayList<Mano> manos = null;
    private Administrador administrador = null;
    
    public AdministrarMesas(Administrador admin) {
        administrador = admin;
        initComponents();
        setLocationRelativeTo(null);
        controladorAdministrarMesas = new ControladorAdministrarMesas(this, administrador);
        lblNombre.setText("Nombre: " + admin.getNombreCompleto());
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                salir();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombre = new javax.swing.JLabel();
        lblRecaudado = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaMesas = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnCrearMesa = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaManos = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        lblNombre.setText("Nombre:");

        lblRecaudado.setText("Total recaudado:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Administrar Mesas");

        listaMesas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaMesasValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listaMesas);

        jLabel1.setText("Mesas:");

        jLabel2.setText("Manos de la mesa seleccionada:");

        btnCrearMesa.setText("Crear Mesa");
        btnCrearMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearMesaActionPerformed(evt);
            }
        });

        listaManos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaManosValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listaManos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(332, 332, 332))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCrearMesa)
                        .addGap(40, 40, 40))))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 815, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(31, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(lblNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRecaudado)
                        .addGap(111, 111, 111))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 815, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(lblRecaudado))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnCrearMesa)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaMesasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaMesasValueChanged
        int pos = listaMesas.getSelectedIndex();
        if(pos!=-1){ //hay seleccion
            Mesa seleccionada = mesas.get(pos);
            controladorAdministrarMesas.seleccionMesa(seleccionada);
        } else { //se borro lo seleccionado
            controladorAdministrarMesas.seleccionMesa(null);
        }

    }//GEN-LAST:event_listaMesasValueChanged

    private void btnCrearMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearMesaActionPerformed
        new CrearMesa().setVisible(true);
    }//GEN-LAST:event_btnCrearMesaActionPerformed

    private void listaManosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaManosValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_listaManosValueChanged

    @Override
    public void mostrarError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, getTitle(), JOptionPane.ERROR_MESSAGE);
    }
    
    private void salir(){
        controladorAdministrarMesas.logout(administrador);
        this.dispose();
    }

    @SuppressWarnings("unchecked")
    @Override
    public void cargarMesas(ArrayList<Mesa> listaDeMesas) {
    mesas = listaDeMesas;
    int recaudacion = 0;
    DefaultListModel<String> model = new DefaultListModel<>();
    for (Mesa mesa : listaDeMesas) {
        model.addElement(mesa.datosAdministrador());
        recaudacion += mesa.getMontoRecaudado();
    }
    lblRecaudado.setText("Total recaudado: $" + recaudacion);
    listaMesas.setModel(model);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearMesa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblRecaudado;
    private javax.swing.JList listaManos;
    private javax.swing.JList listaMesas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mostrarMontoRecaudado(int recaudacion) {
        lblRecaudado.setText("Total recaudado: $" + recaudacion);
    }

    @Override
    public void mostrarManos(ArrayList<Mano> listaDeManos) {
        manos = listaDeManos;
        DefaultListModel<Mano> model = new DefaultListModel<>();
        for (Mano mano : manos) {
            model.addElement(mano);
        }
        listaManos.setModel(model);
    }

    @Override
    public void borrarManos() {
        // TODO Auto-generated method stub
        throw new UnsupportedOperationException("Unimplemented method 'borrarManos'");
    }

    @Override
    public void actualizarMesas(ArrayList<Mesa> listaMesas) {
        this.cargarMesas(listaMesas);
    }

}
